// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: afk.sql

package db

import (
	"context"
	"database/sql"
)

const createAFK = `-- name: CreateAFK :one
INSERT INTO "afk" (
   userid
) VALUES (
    $1
) RETURNING afkid, userid, created_at
`

func (q *Queries) CreateAFK(ctx context.Context, userid sql.NullInt64) (Afk, error) {
	row := q.db.QueryRowContext(ctx, createAFK, userid)
	var i Afk
	err := row.Scan(&i.Afkid, &i.Userid, &i.CreatedAt)
	return i, err
}

const getAFKCount = `-- name: GetAFKCount :one
SELECT count(*) from "afk"
WHERE userid = $1
`

func (q *Queries) GetAFKCount(ctx context.Context, userid sql.NullInt64) (int64, error) {
	row := q.db.QueryRowContext(ctx, getAFKCount, userid)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const listAFK = `-- name: ListAFK :one
SELECT afkid, userid, created_at from "afk"
WHERE userid = $1
`

func (q *Queries) ListAFK(ctx context.Context, userid sql.NullInt64) (Afk, error) {
	row := q.db.QueryRowContext(ctx, listAFK, userid)
	var i Afk
	err := row.Scan(&i.Afkid, &i.Userid, &i.CreatedAt)
	return i, err
}
